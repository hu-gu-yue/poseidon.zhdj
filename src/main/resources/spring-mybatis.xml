<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context 
        				http://www.springframework.org/schema/context/spring-context.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/util 
						http://www.springframework.org/schema/util/spring-util.xsd">
    
	<!--配置配置文件 -->
	<util:properties id="config" location="classpath:config.properties" /> 
	<util:properties id="mailConfig" location="classpath:mailConfig.properties" />   
	
	
	<!-- 数据源 -->
	<bean id="development" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://192.168.1.216:3306/hezhubo?useUnicode=true&amp;characterEncoding=UTF-8" />
		<property name="username" value="hezhubo" />
		<property name="password" value="hezhubo1116" />
		<!-- 初始化连接 -->
		<property name="initialSize" value="10"></property>
		<!-- 最大连接数量 -->
		<property name="maxActive" value="150"></property>
		<!-- 最大空闲连接 -->
		<property name="maxIdle" value="20"></property>
		<!-- 最小空闲连接 -->
		<property name="minIdle" value="5"></property>
		<!-- 是否在自动回收超时连接的时候打印连接的超时错误 -->
		<property name="logAbandoned" value="true"></property>
		<!-- 是否自动回收超时连接 -->
		<property name="removeAbandoned" value="true"></property>
		<!-- 超时时间(以秒数为单位)  -->
		<property name="removeAbandonedTimeout" value="10"></property>
		<!-- 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒 -->
		<property name="maxWait" value="1000"></property>
		<!-- 1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程-->  
        <property name="minEvictableIdleTimeMillis" value="500"/> 
		<!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->  
        <property name="timeBetweenEvictionRunsMillis" value="500"/> 
        <!--  在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->  
        <property name="numTestsPerEvictionRun" value="10"/>  
        <!-- 是否开启池的preparedstatement -->
        <property name="poolPreparedStatements" value="true"></property>
		<!-- 如果数据源的defaultAutoCommit设置为True了，那么方法中如果自己捕获了异常，事务是不会回滚的，如果没有自己捕获异常则事务会回滚 -->
		<property name="defaultAutoCommit" value="false" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="development" />
		<property name="mapperLocations" value="classpath:mapping/*/*.xml" />
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<value>
							dialect=mysql
							reasonable=true
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>

	<!--MapperScannerConfigurer配置 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--basePackage指定要扫描的包，在此包之下的映射器都会被 搜索到。可指定多个包，包与包之间用逗号或分号分隔 -->
		<property name="basePackage" value="poseidon.zhdj.db.*.dao"/>
	</bean>
	
	<!--redis配置开始 -->
	<context:property-placeholder location="classpath:redis.properties" />

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
	</bean>

	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.ip}" />
		<property name="port" value="${redis.port}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>

	<bean id = "stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>

	<!--redis配置结束 -->
	
	<!-- 事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="development" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 方法的过滤规则 -->
		<tx:attributes>
			<tx:method name="select*" read-only="true" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!--把事务控制在Service层 -->
		<aop:pointcut id="pc" expression="execution(* poseidon.zhdj.db.*.service.impl.*.*(..))" />
		<aop:advisor pointcut-ref="pc" advice-ref="txAdvice" />
	</aop:config>
	<tx:annotation-driven transaction-manager="transactionManager" />	

</beans>