<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/mvc
        				http://www.springframework.org/schema/mvc/spring-mvc.xsd
        				 http://www.springframework.org/schema/task 
       					 http://www.springframework.org/schema/task/spring-task.xsd
						">
	<mvc:annotation-driven />
	<tx:annotation-driven />

	<!-- 指定自己定义的validator -->
	<mvc:annotation-driven validator="validator" />
	
	<context:component-scan base-package="poseidon.zhdj.db" />
	<context:component-scan base-package="poseidon.zhdj.controller" />
	<context:component-scan base-package="poseidon.zhdj.common.task" />
	<context:component-scan base-package="poseidon.lib.core.tool.img" />
	<context:component-scan base-package="websocket" />

	<!-- 以下 validator ConversionService 在使用 mvc:annotation-driven 会 自动注册 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找 -->
				<value>classpath:messages</value>
				<value>classpath:org/hibernate/validator/ValidationMessages</value>
			</list>
		</property>
		<property name="useCodeAsDefaultMessage" value="false" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="60" />
	</bean>

	<task:executor id="executor" pool-size="10" />
	<task:scheduler id="scheduler" pool-size="10" />
	<task:annotation-driven executor="executor" scheduler="scheduler" />

	<!-- Spring IOC工具类 -->
	<!-- google kaptcha的相关配置-->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<!-- 是否有边框 可选yes 或者 no -->
						<prop key="kaptcha.border">yes</prop>
						<!-- 边框颜色 -->
						<prop key="kaptcha.border.color">105,179,90</prop>
						<!-- 验证码文本字符颜色 -->
						<prop key="kaptcha.textproducer.font.color">blue</prop>
						<!-- 验证码文本字符大小 -->
						<prop key="kaptcha.textproducer.font.size">40</prop>
						<!-- 验证码图片的宽度 默认200 -->
						<prop key="kaptcha.image.width">100</prop>
						<!-- 验证码图片的高度 默认50 -->
						<prop key="kaptcha.image.height">40</prop>
						<!-- 验证码文本字符长度  默认为5 -->
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<!-- 验证码文本字体样式  默认为new Font("Arial", 1, fontSize), new Font("Courier", 1, fontSize)  -->
						<prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>
</beans>